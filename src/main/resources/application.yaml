#alternativa all app.properties ha indentazione come piton
server:
  port: 8081

spring:
  application:
    name: myblog

#Configurazione dataBase
  datasource:
    url: jdbc:mysql://${DATABASE_MYSQL_HOSTNAME}:${DATABASE_MYSQL_PORT}/${DATABASE_MYSQL_NAME}?ssl-mode=REQUIRED
    username: ${DATABASE_MYSQL_USERNAME}
    password: ${DATABASE_MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  #Configurazione jpa

  jpa:
    hibernate:
      #Values:
       # none: non viene apportata alcuna modifica al DB (valore da mettere in ambiente di produzione
       # update: crea le tabelle sul ed i relativi campi sul db qualora non esistano.
               #Modifica le tabelle esistenti aggiungendo solo i campi nuovi, non modifica quelli esistenti
       # create-drop: crea le tabelle all'avvio dell'applicazione e ne fa il drop quando stoppo l'applicazione
       # validated: confronta le classi (entita) con le tabelle se trova discrepanze solleva un'eccezione

      ddl-auto: update
    properties:
      dialect: arg.hibernate.dialect.MySQLDialect
    show-sql: true
    open-in-view: false

logging:
  level:
    '[it.cgmconsulting.myblog]' : info
    '[org.hibernate.orm.jdbc.bind]' : debug
    '[org.springframework.boot]' : info
